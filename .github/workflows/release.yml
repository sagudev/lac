on:
  push:
    tags:
      - "v*" # Run when tag matches v*, i.e. v1.0, v20.15.10

name: Release

env:
  RELEASE_BIN: lac
  RELEASE_DIR: artifacts
  GITHUB_REF: "${{ github.ref }}"

  # Space separated paths to include in the archive.
  RELEASE_ADDS: README.md

jobs:
  build:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macos-latest
          target: x86_64-apple-darwin
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        - os: ubuntu-latest
          target: i686-unknown-linux-gnu
        - os: windows-latest
          target: x86_64-pc-windows-msvc
        - os: windows-latest
          target: i686-pc-windows-msvc
    steps:
    - uses: actions/checkout@v2
    - name: Install stable toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true
        target: ${{ matrix.target }}
        default: true

    - name: Query version number
      id: get_version
      shell: bash
      run: |
        echo "using version tag ${GITHUB_REF:10}"
        echo ::set-output name=version::"${GITHUB_REF:10}"

    - name: Install p7zip (MacOS)
      if: startsWith(matrix.os, 'mac')
      run: brew install p7zip

    - name: Install multilib (linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt install gcc-multilib -y

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create artifact directory
      run: |
        mkdir ${{ env.RELEASE_DIR }}
        mkdir dist

    - name: Create tarball (Linux)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        mv ./target/${{ matrix.target }}/release/${{ env.RELEASE_BIN }} ./dist/${{ env.RELEASE_BIN }}
        mv ${{ env.RELEASE_ADDS }} ./dist
        7z a -ttar -so -an ./dist | 7z a -si ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.tar.gz

    - name: Create tarball (Windows)
      if: startsWith(matrix.os, 'windows')
      shell: bash
      run: |
        mv ./target/${{ matrix.target }}/release/${{ env.RELEASE_BIN }}.exe ./dist/${{ env.RELEASE_BIN }}.exe
        mv ${{ env.RELEASE_ADDS }} ./dist
        7z a -ttar -so -an ./dist | 7z a -si ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.tar.gz

    - name: Create tarball (MacOS)
      if: startsWith(matrix.os, 'mac')
      run: |
        mv ./target/${{ matrix.target }}/release/${{ env.RELEASE_BIN }} ./dist/${{ env.RELEASE_BIN }}
        mv ${{ env.RELEASE_ADDS }} ./dist
        7z a -ttar -so -an ./dist | 7z a -si ./${{ env.RELEASE_DIR }}/${{ env.RELEASE_BIN }}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.target }}.tar.gz

    - name: Upload Zip
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.target }}
        path: ./${{ env.RELEASE_DIR }}

  release:
    name: GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Query version number
      id: get_version
      shell: bash
      run: |
        echo "using version tag ${GITHUB_REF:10}"
        echo ::set-output name=version::"${GITHUB_REF:10}"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.VERSION }}
        release_name: ${{ steps.get_version.outputs.VERSION }}

    - name: Download tarball
      uses: actions/download-artifact@v1
      with:
        name: x86_64-apple-darwin

    - name: Download tarball
      uses: actions/download-artifact@v1
      with:
        name: x86_64-unknown-linux-gnu

    - name: Download tarball
      uses: actions/download-artifact@v1
      with:
        name: i686-unknown-linux-gnu

    - name: Download tarball
      uses: actions/download-artifact@v1
      with:
        name: x86_64-pc-windows-msvc

    - name: Download tarball
      uses: actions/download-artifact@v1
      with:
        name: i686-pc-windows-msvc

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: |
          ./x86_64-apple-darwin/lac-${{ steps.get_version.outputs.VERSION }}-x86_64-apple-darwin.tar.gz
          ./x86_64-unknown-linux-gnu/lac-${{ steps.get_version.outputs.VERSION }}-x86_64-unknown-linux-gnu.tar.gz
          ./i686-unknown-linux-gnu/lac-${{ steps.get_version.outputs.VERSION }}-i686-unknown-linux-gnu.tar.gz
          ./x86_64-pc-windows-msvc/lac-${{ steps.get_version.outputs.VERSION }}-x86_64-pc-windows-msvc.tar.gz
          ./i686-pc-windows-msvc/lac-${{ steps.get_version.outputs.VERSION }}-i686-pc-windows-msvc.tar.gz